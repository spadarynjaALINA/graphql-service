type Album {
    _id: ID!
    name: String
    released: Int
    artists: [Artist]
    bands: [Band]
    tracks: [Track]
    genres: [Genre]
    image: String
}
input NewAlbum {
    name: String!
    released: Int
    artists: [ String]
    bands: [String]
    tracks: [String]
    genres: [String]
    image: String
}

input UpdateAlbum {
  _id: ID!
    name: String
    released: Int
    artists: [ String]
    bands: [ String]
    tracks: [ String]
    genres: [ String]
    image: String
}
type Query {
    getAlbums(limit:Int,offset:Int):[Album]
    getAlbum(id:ID!):Album
}

type Mutation {
    createAlbum(newAlbum:NewAlbum):Album
    updateAlbum(id:ID!,updateAlbum:UpdateAlbum):Album
    deleteAlbum(id:ID!):DeleteData
}