type Album {
    _id: ID!
    name: String
    released: Int
    artists: [Artist]
    bands: [Band]
    tracks: [Track]
    genres: [Genre]
    image: String
}
input NewAlbum {
    name: String!
    released: Int
    artistsIds: [ String]
    bands: [String]
    tracksIds: [String]
    genres: [String]
    image: String
}

input UpdateAlbum {
    name: String
    released: Int
    artistsIds: [ String]
    bands: [ String]
    tracksIds: [ String]
    genres: [ String]
    image: String
}
type Albums {
  items: [Album]
  limit: Int
  offset: Int
  total: Int
}
type Query {
    albums(limit:Int,offset:Int):Albums
    album(id:ID!):Album
}

type Mutation {
    createAlbum(album:NewAlbum):Album
    updateAlbum(id:ID!,album:UpdateAlbum):Album
    deleteAlbum(id:ID!):DeleteData
}